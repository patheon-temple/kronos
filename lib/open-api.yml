---
openapi: 3.0.1
info:
  title: Example API
  description: An example application with OpenAPI, Swashbuckle, and API versioning.<h4>Additional
    Information</h4>
  contact:
    name: Bill Mei
    email: bill.mei@somewhere.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  version: '1.0'
servers:
  - url: https://localhost:7115
    description: Local development server with TLS
  - url: http://localhost:5108
    description: Local development server
tags:
  - name: Hermes
    description: Hermes API related endpoints
  - name: Kronos
    description: Kronos API related endpoints
  - name: Athena
    description: Athena API related endpoints
paths:
  "/hermes/api/v1/authenticate":
    post:
      operationId: authenticate
      tags:
        - Hermes
      description: Authentication endpoint
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/AuthenticationPostRequest"
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/AuthenticationSuccessfulResponse"
  "/kronos/api/v1":
    get:
      tags:
        - Kronos
      description: Discovery endpoint for rest of the serices
      operationId: discovery
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  "$ref": "#/components/schemas/ServiceDescription"
components:
  schemas:
    AuthenticationPostRequest:
      required:
        - credentialsType
      type: object
      properties:
        credentialsType:
          "$ref": "#/components/schemas/CredentialsType"
        deviceId:
          type: string
          description: Unique device ID
          nullable: true
          example: 00-B0-D0-63-C2-26
        username:
          type: string
          nullable: true
        password:
          type: string
          nullable: true
        requestedScopes:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
    AuthenticationSuccessfulResponse:
      required:
        - accessToken
        - id
      type: object
      properties:
        accessToken:
          type: string
          nullable: true
        id:
          type: string
          nullable: true
        username:
          type: string
          nullable: true
        scopes:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
    CredentialsType:
      type: string
      enum: [ Unknown, DeviceId, Password ]
     
    ServiceDescription:
      required:
        - description
        - url
      type: object
      properties:
        url:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        healthcheckUrl:
          type: string
          nullable: true
      additionalProperties: false
  securitySchemes:
    Bearer:
      type: http
      description: "JWT Authorization header using the Bearer scheme.\r\n                      Enter
        'Bearer' [space] and then your token in the text input below.\r\n                      Example:
        'Bearer 12345abcdef'"
      scheme: Bearer
security:
  - Bearer: []
